basePath: /
definitions:
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  auth.LoginResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
    type: object
  auth.RegisterRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      user_type:
        type: string
      username:
        type: string
    type: object
  auth.RegisterResponse:
    properties:
      user:
        $ref: '#/definitions/auth.User'
    type: object
  auth.ResetPasswordRequest:
    properties:
      email:
        type: string
    type: object
  auth.User:
    properties:
      address:
        type: string
      bio:
        type: string
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      is_verified:
        type: boolean
      phone_number:
        type: string
      specialties:
        items:
          type: string
        type: array
      updated_at:
        type: string
      user_type:
        type: string
      username:
        type: string
      years_of_experience:
        type: integer
    type: object
host: localhost:8040
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample API gateway server for Auth Service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Auth Service
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Logs in a user with the provided credentials
      parameters:
      - description: Login credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: User login
      tags:
      - Auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided details
      parameters:
      - description: Registration details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Register a new user
      tags:
      - Auth
  /api/auth/update_password:
    put:
      consumes:
      - application/json
      description: Updates the password for a user based on the provided email and
        new password
      parameters:
      - description: User email
        in: query
        name: email
        required: true
        type: string
      - description: Update Password Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update user password
      tags:
      - Auth
  /api/auth/update_token:
    get:
      consumes:
      - application/json
      description: Refreshes the access token using a refresh token
      parameters:
      - description: Refresh token
        in: query
        name: refresh_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Refresh access token
      tags:
      - Auth
swagger: "2.0"
